### python 3 codes ###
# remotely use Pitt HTC cluster
# python=python/anaconda3.8-2020.11 (Python 3.8.5.final.0); pandas=1.1.3; numpy=1.19.2;

### to make master mtx for modeling, containing eff & sequence info for
    # Pol II: WT, E1103G, F1086S, G1097D, H1085Q
    # lib: AYR, BYR, ARY
    # TSS: -8 to +4 TSSs
    # position: -11 to +9

# Input-1s: [*-pDs_B12RepsCmb-ct4-pos_eff_mtx-stat.csv] generated by <3-SumReps_ct4.py>, reps-combined TSS efficiency matrix, plus reps stat info, w/ ct4 applied

# Output-1: [all-pDs_B12RepsCmb-ct4-eff-84_seqn11p9_info_mtx.csv]
    # 1+20+4 columnes: [efficiency of TSS] - [base at each -11 to +9 positions]x20 - [PolII] - [lib] - [TSS] - [TSSvar]

import pandas as pd

inp_folder = '/bgfs/ckaplan/Yunye/3-TSS_sequence_library/7-poolDs_cmbTs/3-B12RepsCmb-pos_eff_mtx/'
out_folder = '/bgfs/ckaplan/Yunye/3-TSS_sequence_library/7-poolDs_cmbTs/'

TSSs = {'-8':11, '-7':12, '-6':13, '-5':14, '-4':15, '-3':16, '-2':17, '-1':18, '1':19, '2':20, '3':21, '4':22}
    # key is the TSS name, value is the index after adding flanking seq (11bp before -8 and 11bp after +1)
POSs = {'n11':-11, 'n10':-10, 'n9':-9, 'n8':-8, 'n7':-7, 'n6':-6, 'n5':-5, 'n4':-4, 'n3':-3, 'n2':-2,'n1':-1,\
        'p1':0, 'p2':1, 'p3':2, 'p4':3, 'p5':4, 'p6':5, 'p7':6, 'p8':7, 'p9':8}
    # key is the pos name relative to TSS, value is the index relative to +1 pos)

fout = 'all-pDs_B12RepsCmb-ct4-eff-84_seqn11p9_info_mtx.csv'
fout_columns = ['eff',\
                'n11', 'n10', 'n9', 'n8', 'n7', 'n6', 'n5', 'n4', 'n3', 'n2', 'n1',\
                'p1', 'p2', 'p3', 'p4', 'p5', 'p6', 'p7', 'p8', 'p9',\
                'PolII', 'lib', 'TSS', 'TSSvar']
pd.DataFrame(columns = fout_columns).to_csv(out_folder+fout, index=False, header=True)
       
for lib in ['AYR','BYR','ARY']:
    for pol in ['WT','E1103G','F1086S','G1097D','H1085Q']:
        mtx = pd.read_csv(inp_folder+ lib+'_'+pol+'-pDs_B12RepsCmb-ct4-pos_eff_mtx-stat.csv')\
                .rename(columns={'index':'TSS'}, inplace=False)[['TSS']+list(TSSs.keys())]
        mtx['TSS_flanking'] = 'GATTTTTTTTC'+ mtx['TSS'] +'ACATTTTCAAA'
    
        for tss, tss_idx in TSSs.items():
            master_mtx = pd.DataFrame()
            master_mtx['eff'] = mtx[tss]
            for pos, pos_idx in POSs.items():
                master_mtx[pos] = mtx['TSS_flanking'].str.slice(start=(tss_idx+pos_idx), stop=(tss_idx+pos_idx)+1)
            master_mtx['PolII'] = pol
            master_mtx['lib'] = lib
            master_mtx['TSS'] = tss
            master_mtx['TSSvar'] = mtx['TSS']
            master_mtx[fout_columns].to_csv(out_folder+fout, index=False, header=False, mode = 'a') # 'a' for appending