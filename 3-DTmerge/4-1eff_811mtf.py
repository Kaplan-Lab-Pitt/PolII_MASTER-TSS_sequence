### python 3 codes ###
# remotely use Pitt HTC cluster
# python=python/anaconda3.8-2020.11 (Python 3.8.5.final.0); pandas=1.1.3; numpy=1.19.2;

### 1. make 811 motif matrix for designed +1 TSS eff of AYR+BYR+ARY libraries.
    # sort columns by known preference
    # sort rows by WT ACA eff (only including '-7to-2' variants that exit in WT)
### 2. make mutant-WT eff difference matrix for AYR+BYR+ARY libraries
### 3. bin AYA/BYA/AYG/BYG motifs by WT efficiency

# Input-1s: [*-pDs_B12RepsCmb-ct4-pos_eff_mtx-stat.csv] generated by <3-SumReps_ct4.py>, efficiency mtx, after ct4

# Output-1s: [*-pDs_B12RepsCmb-ct4-1eff_811mtf.csv], 811 motif matrix for +1 TSS eff of AYR+BYR+ARY libraries
# Output-2s: [*-pDs_B12RepsCmb-ct4-1eff_811mtf-SortByWtACA1eff.csv], sort Output-1 by WT ACA eff
# Outout-3s: [*-WT-pDs_B12RepsCmb-ct4-1eff_811mtf_DiffMtx-SortByWtACA1eff.csv], eff difference mtx
# Output-4s: [*-WT-pDs_B12RepsCmb-ct4-1eff_811mtf_DiffMtx-BinByWt1eff-*.csv], bin eff difference by WT eff

import pandas as pd

inp_folder = '/bgfs/ckaplan/Yunye/3-TSS_sequence_library/7-poolDs_cmbTs/3-B12RepsCmb-pos_eff_mtx/'
out_folder = '/bgfs/ckaplan/Yunye/3-TSS_sequence_library/7-poolDs_cmbTs/4-ct4-1eff_811mtf/'

motif_order = ['ACA','ACG','ATA','ATG','CCA','GCA','TCA','CCG','GCG','TCG','CTG','GTG','TTG','CTA','GTA','TTA','AAC','AAT','AGC','AGT']
motif_classes = {'AYA':['ACA','ATA'], 'BYA':['CCA','GCA','TCA','CTA','GTA','TTA'], 'AYG':['ACG','ATG'], 'BYG':['CCG','GCG','TCG','CTG','GTG','TTG']}

for pol in ['WT','E1103G','F1086S','G1097D','H1085Q']:
    all_mtx = pd.concat([pd.read_csv(inp_folder+'AYR_'+pol+'-pDs_B12RepsCmb-ct4-pos_eff_mtx-stat.csv')[['index','1']].rename(columns={'index':'TSS'}, inplace=False),\
                         pd.read_csv(inp_folder+'BYR_'+pol+'-pDs_B12RepsCmb-ct4-pos_eff_mtx-stat.csv')[['index','1']].rename(columns={'index':'TSS'}, inplace=False),\
                         pd.read_csv(inp_folder+'ARY_'+pol+'-pDs_B12RepsCmb-ct4-pos_eff_mtx-stat.csv')[['index','1']].rename(columns={'index':'TSS'}, inplace=False)],\
                        ignore_index=True)
    all_mtx['-7to-2'] = all_mtx['TSS'].str.slice(start=1,stop=7)
    all_mtx['-8-1+1'] = all_mtx['TSS'].str.slice(start=0,stop=1) + all_mtx['TSS'].str.slice(start=7)
    all_mtx = all_mtx[['-7to-2','-8-1+1','1']].set_index(['-7to-2','-8-1+1']).unstack()
    all_mtx.columns = all_mtx.columns.get_level_values(1)
    all_mtx = all_mtx[motif_order].sort_values(by=['ACA'], ascending=False)
    all_mtx.reset_index().to_csv(out_folder+pol+'-pDs_B12RepsCmb-ct4-1eff_811mtf.csv', index=False, header=True) # Output-1
    
    if pol == 'WT':
        wt = all_mtx.copy(deep=True)
        wt.reset_index().to_csv(out_folder+pol+'-pDs_B12RepsCmb-ct4-1eff_811mtf-SortByWtACA1eff.csv', index=False, header=True) # Output-2
    else:
        all_mtx = all_mtx.reindex(wt.index)
        all_mtx.reset_index().to_csv(out_folder+pol+'-pDs_B12RepsCmb-ct4-1eff_811mtf-SortByWtACA1eff.csv', index=False, header=True) # Output-2
    
        mut_wt = all_mtx.subtract(wt) # if missing value in either mtx, will return as NaN
        mut_wt.reset_index().to_csv(out_folder+pol+'-WT-pDs_B12RepsCmb-ct4-1eff_811mtf_DiffMtx-SortByWtACA1eff.csv', index=False, header=True) # Output-3
    
        for mtf_class, mtfs in motif_classes.items():
            wt_sub = wt[mtfs]
            mut_wt_sub = mut_wt[mtfs]
        
            mut_bin = pd.DataFrame()
            # Note: dataframe mut_wt_sub (mut_wt) and wt_sub (wt) are in exact same rows and columns orders, meaning cells have one-to-one correspondence
            for i in [90, 80, 70, 60, 50, 40, 30, 20, 10, 0]:
                if i == 90: # need to include 100, [i, i+10]
                    mut_bin = pd.concat([mut_bin, pd.DataFrame(pd.Series(mut_wt_sub[(wt_sub>=i) & (wt_sub<=(i+10))].stack().values, name='wt'+str(i)+'_'+str(i+10)))], axis=1)
                else: # [i, i+10)
                    mut_bin = pd.concat([mut_bin, pd.DataFrame(pd.Series(mut_wt_sub[(wt_sub>=i) & (wt_sub<(i+10))].stack().values, name='wt'+str(i)+'_'+str(i+10)))], axis=1)
            mut_bin.to_csv(out_folder+pol+'-WT-pDs_B12RepsCmb-ct4-1eff_811mtf_DiffMtx-BinByWt1eff-'+mtf_class+'.csv', index=False, header=True) # Output-4