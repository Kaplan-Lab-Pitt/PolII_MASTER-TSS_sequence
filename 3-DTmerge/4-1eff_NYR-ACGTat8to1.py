### python 3 codes ###
# remotely use Pitt HTC cluster
# python=python/anaconda3.8-2020.11 (Python 3.8.5.final.0); pandas=1.1.3; numpy=1.19.2;

### to make matrix for +1 TSS eff separated into individual base groups at each -8 to +1 positions

# Input-1s: [*-pDs_B12RepsCmb-ct4-pos_eff_mtx-stat.csv] generated by <3-SumReps_ct4.py>, efficiency mtx, after ct4

# Output-1s: [*-pDs_B12RepsCmb-ct4-1eff_*posAGCT.csv]

import pandas as pd

inp_folder = '/bgfs/ckaplan/Yunye/3-TSS_sequence_library/7-poolDs_cmbTs/3-B12RepsCmb-pos_eff_mtx/'
out_folder = '/bgfs/ckaplan/Yunye/3-TSS_sequence_library/7-poolDs_cmbTs/4-ct4-1eff_NYR-AGCT/'

## separated AYR & BYR
for lib in ['AYR','BYR']:
    for pol in ['WT','E1103G','F1086S','G1097D','H1085Q']:
        mtx = pd.read_csv(inp_folder+lib+'_'+pol+'-pDs_B12RepsCmb-ct4-pos_eff_mtx-stat.csv')[['index','1']].rename(columns={'index':'TSS'}, inplace=False)
        
        # make base matrix for -1/+1 motif
        mtx['-1+1'] = mtx['TSS'].str.slice(start=7,stop=9)
        mtx['-1+1_rest'] = mtx['TSS'].str.slice(start=0,stop=7) + '_'
        mtx_AGCT = mtx[['-1+1_rest','-1+1','1']].set_index(['-1+1_rest', '-1+1']).unstack()
        mtx_AGCT.columns = mtx_AGCT.columns.get_level_values(1)
        mtx_AGCT.reset_index().to_csv(out_folder+lib+'_'+pol+'-pDs_B12RepsCmb-ct4-1eff_11posAGCT.csv', index=False, header=True)
        
        # make base matrix for individual -8 to -2 positions
        for p in range(7):
            mtx[str(p-8)] = mtx['TSS'].str.slice(start=p,stop=p+1)
            mtx[str(p-8)+'_rest'] = mtx['TSS'].str.slice(start=0,stop=p) + '_' + mtx['TSS'].str.slice(start=p+1)
            mtx_AGCT = mtx[[str(p-8)+'_rest', str(p-8),'1']].set_index([str(p-8)+'_rest', str(p-8)]).unstack()
            mtx_AGCT.columns = mtx_AGCT.columns.get_level_values(1)
            mtx_AGCT[['A','G','C','T']].reset_index().to_csv(out_folder+lib+'_'+pol+'-pDs_B12RepsCmb-ct4-1eff_'+ str(p-8)+'posAGCT.csv', index=False, header=True)

## combined AYR+BYR
for pol in ['WT','E1103G','F1086S','G1097D','H1085Q']:
    mtx = pd.concat([pd.read_csv(inp_folder+'AYR_'+pol+'-pDs_B12RepsCmb-ct4-pos_eff_mtx-stat.csv')[['index','1']].rename(columns={'index':'TSS'}, inplace=False),\
                     pd.read_csv(inp_folder+'BYR_'+pol+'-pDs_B12RepsCmb-ct4-pos_eff_mtx-stat.csv')[['index','1']].rename(columns={'index':'TSS'}, inplace=False)],\
                    ignore_index=True)
    
    # make base matrix for -1/+1 motif
    mtx['-1+1'] = mtx['TSS'].str.slice(start=7,stop=9)
    mtx['-1+1_rest'] = mtx['TSS'].str.slice(start=0,stop=7) + '_'
    mtx_AGCT = mtx[['-1+1_rest','-1+1','1']].set_index(['-1+1_rest', '-1+1']).unstack()
    mtx_AGCT.columns = mtx_AGCT.columns.get_level_values(1)
    mtx_AGCT.reset_index().to_csv(out_folder+'NYR_'+pol+'-pDs_B12RepsCmb-ct4-1eff_11posAGCT.csv', index=False, header=True)
    
    # make base matrix for individual -8 to -2 positions
    for p in range(7):
        mtx[str(p-8)] = mtx['TSS'].str.slice(start=p,stop=p+1)
        mtx[str(p-8)+'_rest'] = mtx['TSS'].str.slice(start=0,stop=p) + '_' + mtx['TSS'].str.slice(start=p+1)
        mtx_AGCT = mtx[[str(p-8)+'_rest', str(p-8),'1']].set_index([str(p-8)+'_rest', str(p-8)]).unstack()
        mtx_AGCT.columns = mtx_AGCT.columns.get_level_values(1)
        mtx_AGCT[['A','G','C','T']].reset_index().to_csv(out_folder+'NYR_'+pol+'-pDs_B12RepsCmb-ct4-1eff_'+ str(p-8)+'posAGCT.csv', index=False, header=True)

## combined AYR+BYR => master matrix
for pol in ['WT','E1103G','F1086S','G1097D','H1085Q']:
    mtx = pd.concat([pd.read_csv(inp_folder+'AYR_'+pol+'-pDs_B12RepsCmb-ct4-pos_eff_mtx-stat.csv')[['index','1']].rename(columns={'index':'TSS'}, inplace=False),\
                     pd.read_csv(inp_folder+'BYR_'+pol+'-pDs_B12RepsCmb-ct4-pos_eff_mtx-stat.csv')[['index','1']].rename(columns={'index':'TSS'}, inplace=False)],\
                    ignore_index=True)
    
    mtx_81 = pd.DataFrame()
    # for individual -8 to -2 positions
    for p in range(7):
        mtx[str(p-8)] = mtx['TSS'].str.slice(start=p,stop=p+1)
        mtx[str(p-8)+'_rest'] = mtx['TSS'].str.slice(start=0,stop=p) + '_' + mtx['TSS'].str.slice(start=p+1)
        mtx_AGCT = mtx[[str(p-8)+'_rest', str(p-8),'1']].set_index([str(p-8)+'_rest', str(p-8)]).unstack()
        mtx_AGCT.columns = mtx_AGCT.columns.get_level_values(1)
        mtx_81 = pd.concat([mtx_81, mtx_AGCT.reset_index()[['A','G','C','T']]], axis=1)
    # for -1/+1 motif
    mtx['-1+1'] = mtx['TSS'].str.slice(start=7,stop=9)
    mtx['-1+1_rest'] = mtx['TSS'].str.slice(start=0,stop=7) + '_'
    mtx_AGCT = mtx[['-1+1_rest','-1+1','1']].set_index(['-1+1_rest', '-1+1']).unstack()
    mtx_AGCT.columns = mtx_AGCT.columns.get_level_values(1)
    mtx_81 = pd.concat([mtx_81, mtx_AGCT.reset_index()[['CA','CG','TA','TG']]], axis=1)
    
    mtx_81.to_csv(out_folder+'NYR_'+pol+'-pDs_B12RepsCmb-ct4-1eff_ALLposAGCT.csv', index=False, header=True)
    